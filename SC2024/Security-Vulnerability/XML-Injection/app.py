import re
from flask import Flask, request
from lxml import etree

app = Flask(__name__)

# XML 데이터 (간단한 음식 정보)
xml_data = """
<foods>
    <food>
        <name>BelgianWaffles</name>
        <price>$5.95</price>
        <calories>650</calories>
    </food>
    <food>
        <name>StrawberryBelgianWaffles</name>
        <price>$7.95</price>
        <calories>900</calories>
    </food>
</foods>
"""

# XML 데이터를 파싱
root = etree.fromstring(xml_data)

# 취약한 XML 인젝션 공격 가능 코드
@app.route('/xml_query', methods=['GET', 'POST'])
def xml_query():
    if request.method == 'POST':
        name = request.form['name'].strip()  # 사용자가 입력한 값

        # 취약한 부분: 입력 값이 그대로 XPath 쿼리로 사용됨
        xpath_query = f"//food[name/text()='{name}']"
        print("취약한 XPath Query:", xpath_query)  # 쿼리 확인용 출력
        result = root.xpath(xpath_query)

        if result:
            food_list = []
            for food in result:
                food_info = f"이름: {food.find('name').text}, 가격: {food.find('price').text}, 칼로리: {food.find('calories').text}"
                food_list.append(food_info)
            return "<br>".join(food_list)
        else:
            return "사용자를 찾을 수 없습니다."

    return '''
    <h1>취약한 XML Query</h1>
    <form method="post" action="/xml_query">
        음식 이름을 입력하세요 (예: BelgianWaffles, StrawberryBelgianWaffles): <input type="text" name="name"><br>
        <input type="submit" value="조회">
    </form>
    '''

@app.route('/safe_xml_query', methods=['GET', 'POST'])
def safe_xml_query():
    if request.method == 'POST':
        name = request.form['name'].strip()

        # 필터링 : 입력 값에서 공격에 사용될 수 있는 문자들을 제거 또는 차단
        if re.search(r'[\'\"=\[\]@]', name):
            return "Invalid characters in input!"
        
        # 안전한 바인딩 방식으로 처리 (직접적인 쿼리문 변조 방지)
        allowed_names = ['BelgianWaffles', 'StrawberryBelgianWaffles']
        if name not in allowed_names:
            return "음식을 찾을 수 없습니다."
        
        # 안전한 XPath 쿼리
        xpath_query = f"//food[name/text()='{name}']"
        print("안전한 XPath Query: ", xpath_query)
        result = root.xpath(xpath_query)

        if result:
            food_list = []
            for food in result:
                # 각 food 요소에서 name, price, calories 추출
                food_info = f"이름: {food.find('name').text}, 가격: {food.find('price').text}, 칼로리: {food.find('calories').text}"
                food_list.append(food_info)
            return "<br>".join(food_list)
        else:
            return "음식을 찾을 수 없습니다."


    return '''
    <h1>안전한 XML Query</h1>
    <form method="post" action="/safe_xml_query">
    음식 이름을 입력하세요 (특수문자 필터링): <input type="text" name="name"><br>
    <input type="submit" value="조회">
    </form>
    '''


if __name__ == '__main__':
    app.run(debug=True)